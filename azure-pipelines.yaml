name: Ensuring Quality Releases
variables:
  terraform.version: '0.13.4'
  python.version: '3.7.6'
stages:
- stage: Provision
  displayName: Provision Infraestructure
  jobs: 
  - job: Provisionning
    displayName: Provision azure Infraestructure
    steps:
    - task: DownloadSecureFile@1
      name: tfvardef
      displayName: Download terraform.tfvars
      inputs:
        secureFile: 'terraform.tfvars' 

#Need to research
    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: 'known_hosts'
        sshPublicKey: $(PUBLIC_KEY)
        sshKeySecureFile: 'id_rsa'

    - bash: |
        cp $(Agent.TempDirectory)/terraform.tfvars $(System.DefaultWorkingDirectory)/terraform/environments/test
      displayName: Copying terraform.tfvars

    - bash: |
        echo Workspace is at  $(Pipeline.Workspace)
        echo tfvardef file is at $(tfvardef.secureFilePath)
        cd $(Agent.TempDirectory)
        pwd
        ls -la
        cat udacity_azure.pub
        cd ~/.ssh/
        pwd
        ls -la
        cat known_hosts
        # $(System.DefaultWorkingDirectory) is equivalent to $(Build.SourcesDirectory)
        cd $(System.DefaultWorkingDirectory)  
        pwd
        ls -la
      displayName: Verifying the environment

    - task: TerraformInstaller@0
      displayName: Installing  Terraform
      inputs:
        terraformVersion: '0.13.5'

    - task: TerraformTaskV1@0
      displayName: Initializing Terraform 
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
        backendServiceArm: 'ServiceConnectionName'
        backendAzureRmResourceGroupName: 'common-servoce-rg'
        backendAzureRmStorageAccountName: 'jaynrostorage'
        backendAzureRmContainerName: 'jaynro-container'
        backendAzureRmKey: 'terraform.tfstate'
    - task: TerraformTaskV1@0
      displayName: Terraform Apply
      inputs:
        provider: 'azurerm'
        command: 'apply'
        commandOptions: |
          -auto-approve 
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
        environmentServiceNameAzureRM: 'ServiceConnectionName'
- stage: Build
  jobs:
  - job: Build
    pool:
      name: 'ubuntu-18.04'
    steps:
    - task: ArchiveFiles@2
      displayName: Archive FakeRestAPI
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/fakerestapi-$(Build.BuildId).zip'
        verbose: true
#    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
    - publish: '$(Build.ArtifactStagingDirectory)/fakerestapi-$(Build.BuildId).zip'
      displayName: 'Publishing FakeRestAPI artifact'
      artifact: drop-fakerestapi

#Publish Selenium
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/automatedtesting/selenium'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/selenium-tests.zip
        replaceExistingArchive: true
    - publish: $(Build.ArtifactStagingDirectory)/selenium-tests.zip
      artifact: selenium



- stage: Deploy
  jobs:
  - deployment: deployment_fakerestapi
    displayName: Deploy FakeRestAPI
    pool:
      vmImage: 'ubuntu-18.04'
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'Azure subscription 1 (09d9f2d9-084c-455a-a64f-9c03e7820800)'
    backendAzureRmResourceGroupName: 'common-servoce-rg'
    backendAzureRmStorageAccountName: 'jaynrostorage'
    backendAzureRmContainerName: 'jaynro-container'
    backendAzureRmKey: 'terraform.tfstate'
          steps:
          - task: AzureWebApp@1
            displayName: Deploy Azure WebApp
            inputs:
              azureSubscription: '09d9f2d9-084c-455a-a64f-9c03e7820800'
              appName: 'jaynro-AppService'
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/fakerestapi-$(Build.BuildId).zip
              deploymentMethod: zipDeploy

  - deployment: deployment_vm
    displayName: Deploy Virtual Machine
    environment:
      name: 'TEST'
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - bash: |
              pwd
              hostname
              uname -a
              cat /etc/*-release
              sudo apt-get install software-properties-common -y
              sudo apt-add-repository universe -y
              sudo apt-get update -y
              sudo apt-get install python3-pip -y
              sudo apt-get install unzip -y
              sudo apt-get install -y chromium-browser
              sudo apt-get install -y chromium-chromedriver
              python3 -m pip install --upgrade pip
              pip3 install selenium
              python3 -V
              pip3 -V
              /usr/bin/chromium-browser --version
              /usr/bin/chromedriver --version
              python3 -c "import selenium; print('Selenium Version:', selenium.__version__)"
              # Install Log Analytics agent on Linux computers (only need to run once)
              # wget https://raw.githubusercontent.com/Microsoft/OMS-Agent-for-Linux/master/installer/scripts/onboard_agent.sh
              # sh onboard_agent.sh -w ${AZURE_LOG_ANALYTICS_ID} -s ${AZURE_LOG_ANALYTICS_PRIMARY_KEY}
              # sudo /opt/microsoft/omsagent/bin/service_control restart ${AZURE_LOG_ANALYTICS_ID}
            env:  # To use secret variables in a script, we must explicitly map them as environment variables.
              AZURE_LOG_ANALYTICS_ID: $(AZURE_LOG_ANALYTICS_ID)
              AZURE_LOG_ANALYTICS_PRIMARY_KEY: $(AZURE_LOG_ANALYTICS_PRIMARY_KEY)
            displayName: Configuring selenium

